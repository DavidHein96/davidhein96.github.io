[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "Welcome to my site! I just graduated with my Master’s degree in data science and I have a background in academic medical research. My projects at the radiation oncology department at the University of Texas Southwestern Medical Center involve a wide array of techniques in statistics, machine learning, and bioinformatics. I have a strong foundation in statistical analysis and programming an am seeking to leverage these skills to advance ambitious projects in a dynamic, data-driven role.\n\nTechnical Skills & Projects\nCheck out my projects, which are tagged with technical skill categories\n\n\nEducation\nUniversity of Texas at Austin\nMaster of Science in Data Science | 2021-2023\nBachelor of Science in Chemistry | 2015-2019\n\nMcCombs Business Foundations Certificate\nHigh Honors\n\n\n\nExperience\nUniversity of Texas Southwestern Medical Center\nResearch Assistant | 2020 - Present\n\nConduct\nLead\nCollaborate\nConsult\nManage\n\n\n\nPublications\nhein\nhein\nhein\nhein\n\n\nExtra fun stuff"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/first_project/index.html",
    "href": "posts/first_project/index.html",
    "title": "Adoption of a new Colorectal Cancer Treatment",
    "section": "",
    "text": "Code\nknitr::opts_chunk$set(echo = TRUE, fig.width=12, fig.height=8)\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(lmtest)\nlibrary(glmnet)\nlibrary(nnet)\nlibrary(reticulate)\nlibrary(broom)\nlibrary(rmarkdown)\n#py_discover_config()\n#use_condaenv(\"website_env\")"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.dfghsfdgsgfds\n\nprint(\"hi\")\n\n[1] \"hi\""
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "My Projects",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nMay 11, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nAdoption of a new Colorectal Cancer Treatment\n\n\n\n\n\n\n\nR\n\n\npython\n\n\nregression\n\n\nsynthetic data\n\n\noncology\n\n\ndata cleaning\n\n\n\n\n\n\n\n\n\n\n\nMay 11, 2023\n\n\nDave Hein\n\n\n\n\n\n\n  \n\n\n\n\nASCO Poster\n\n\n\n\n\n\n\nR\n\n\npython\n\n\nregression\n\n\nsynthetic data\n\n\noncology\n\n\ndata cleaning\n\n\n\n\n\n\n\n\n\n\n\nMay 11, 2023\n\n\nDave Hein\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMay 8, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/first_project/index.html#creating-synthetic-data",
    "href": "posts/first_project/index.html#creating-synthetic-data",
    "title": "Adoption of a new Colorectal Cancer Treatment",
    "section": "Creating Synthetic Data",
    "text": "Creating Synthetic Data\n\nData cleaning and prep with R\n\n\nCode\n# We will use synthpop to generate a synthetic data set\nlibrary(synthpop)\n\n# Reading in original data from the NCDB\nRectalData &lt;- read_dta(\"data_sets/ncdb_project_data.dta\")\n\ndf1 &lt;- RectalData %&gt;% select(RX_SUMM_SYSTEMIC_SUR_SEQ,\n                                 RX_SUMM_RADIATION, \n                                 RX_SUMM_SURGRAD_SEQ,\n                                 RX_SUMM_CHEMO,  \n                                 SEX,\n                                 MED_INC_QUAR_12, \n                                 AGE,\n                                 raceb, \n                                 TNM_CLIN_STAGE_GROUP,\n                                 TNM_PATH_STAGE_GROUP,\n                                 SEQUENCE_NUMBER, \n                                 HISTOLOGY, \n                                 RX_SUMM_SURG_PRIM_SITE, \n                                 YEAR_OF_DIAGNOSIS, \n                                 FACILITY_TYPE_CD, \n                                 INSURANCE_STATUS, \n                                 CDCC_TOTAL_BEST, \n                                 DX_DEFSURG_STARTED_DAYS,\n                                 CLASS_OF_CASE\n)\n\ndf1 &lt;- df1 %&gt;% \n  filter(!RX_SUMM_SYSTEMIC_SUR_SEQ %in% c(6,7,9), # unknown sequence  \n         !RX_SUMM_RADIATION == 9, # unknown if rad recommended, death cert only\n         !RX_SUMM_SURGRAD_SEQ %in% c(6, 9), # unknown sequence\n         !RX_SUMM_CHEMO %in% c(99,88), # unknown chemo\n          SEQUENCE_NUMBER %in% c(\"00\",\"01\"), # Primary cancer\n          HISTOLOGY %in% c(8140, 8210, 8260, 8261, 8262, 8263, 8470, 8480, 8481), # Proper histology codes\n          RX_SUMM_SURG_PRIM_SITE %in% c(30, 40, 50, 60, 70, 80)) # primary surgery\n\n# Make a simple stage variable and filter to only stage 2 and 3\ndf1 &lt;- df1 %&gt;% mutate(TNM_CLIN_STAGE_GROUP, stage3 = ifelse(str_detect(TNM_CLIN_STAGE_GROUP,\"2\"),\"2\",\"0\")) \ndf1$stage3[str_detect(df1$TNM_CLIN_STAGE_GROUP,\"3\") == TRUE] &lt;- \"3\"\ndf1 &lt;- df1[!(df1$stage3 ==\"0\"),]\n\n# Define neoadjuvant, rad or chemo before surgery \ndf1 &lt;- df1 %&gt;% mutate(neoadjuvant = 3)\ndf1 &lt;- df1 %&gt;% mutate(neoadjuvant = case_when(RX_SUMM_SURGRAD_SEQ %in% c(2,4) ~ 1,\n                                              RX_SUMM_SYSTEMIC_SUR_SEQ %in% c(2,4) ~ 1,\n                                              RX_SUMM_RADIATION==0 & RX_SUMM_CHEMO %in% c(0, 82, 85, 86, 87) ~ 0,\n                                              RX_SUMM_SURGRAD_SEQ==3 & RX_SUMM_CHEMO %in% c(0, 82, 85, 86, 87) ~ 0,\n                                              RX_SUMM_SYSTEMIC_SUR_SEQ==3 & df1$RX_SUMM_RADIATION==0 ~ 0,\n                                              RX_SUMM_SURGRAD_SEQ==3 & RX_SUMM_SYSTEMIC_SUR_SEQ==3 ~ 0\n                                              )) %&gt;% filter(neoadjuvant != 3)\n\n# age group under 45, 45-65, 65 and up AGE\ndf1 &lt;- df1 %&gt;% mutate(agegroup= case_when(AGE&lt;=45 ~0, AGE &gt;45 & AGE &lt;65 ~1, AGE &gt;= 65 ~2))\n\n# create a var for switching facility and add the unknown gov insurance to unknown insurance \ndf1 &lt;- df1 %&gt;% mutate(CLASS_OF_CASE, treatnotatdiag = ifelse(CLASS_OF_CASE %in% c(0,20,21,22),\"Switched\",\"Stayed\"),\n                      INSURANCE_STATUS = ifelse(INSURANCE_STATUS==4,9,INSURANCE_STATUS))\n\n# Omit NA, this project used complete case analysis\ndf1 &lt;- na.omit(df1)\n\n# Keep only relevant variables\ndf1 &lt;- df1 %&gt;% select(SEX,\n                      MED_INC_QUAR_12, \n                      agegroup,\n                      raceb, \n                      stage3,\n                      neoadjuvant,\n                      treatnotatdiag,\n                      YEAR_OF_DIAGNOSIS, \n                      FACILITY_TYPE_CD, \n                      INSURANCE_STATUS, \n                      CDCC_TOTAL_BEST, \n                      DX_DEFSURG_STARTED_DAYS\n)\n\n# Make variables into factors \ndf2 &lt;- mutate(across(!DX_DEFSURG_STARTED_DAYS, as.factor))\n\n\n\n\nData cleaning and prep with Python\n\n\nGenerating and inspecting synthetic data\n\n\nCode\n# Make synthetic data using CART and bootstrapping\n\n# Reorder for synthetic data generation\ndf3 &lt;- df2 %&gt;%\n    dplyr::relocate(raceb, MED_INC_QUAR_12, neoadjuvant)\n\n# Strat by race and ethnicity and median income for best overlap\nsynth_1 &lt;- syn.strata(df3, proper = TRUE, strata = df2$raceb)\nsynth_2 &lt;- syn.strata(df3, proper = TRUE, strata = df3$MED_INC_QUAR_12)\n\nsynth_dat1 &lt;- synth_1$syn\nsynth_dat2 &lt;- synth_2$syn\n\nvars_i_want &lt;- colnames(df2)\nvars_i_want &lt;- vars_i_want[!vars_i_want == \"DX_DEFSURG_STARTED_DAYS\"]\n\n# Check Heat maps to compare\nsynthpop::utility.tables(synth_dat1, df3, tables = \"twoway\", vars = vars_i_want)\nsynthpop::utility.tables(synth_dat2, df3, tables = \"twoway\", vars = vars_i_want)\n\n# Remove Replicates\nfinal_synth_data &lt;- sdc(synth_2, df3, label = \"synthetic\", rm.replicated.uniques = TRUE)\nf &lt;- final_synth_data$syn\nwrite_tsv(f, \"synthetic_NCDB_data.tsv\")"
  },
  {
    "objectID": "posts/first_project/index.html#analysis",
    "href": "posts/first_project/index.html#analysis",
    "title": "Adoption of a new Colorectal Cancer Treatment",
    "section": "Analysis",
    "text": "Analysis\n\nLogistic regression for odds of upfront surgery (R)\n\n\nCode\n# Load synthetic data\nsynthetic_NCDB_data &lt;- read_delim(\"synthetic_NCDB_data.tsv\", delim = \"\\t\", escape_double = FALSE,\n    trim_ws = TRUE)\nsynthetic_NCDB_data &lt;- synthetic_NCDB_data %&gt;%\n    mutate(across(!DX_DEFSURG_STARTED_DAYS, as.factor))\n\n# logistic regression\nlog_fit &lt;- glm(neoadjuvant ~ YEAR_OF_DIAGNOSIS + MED_INC_QUAR_12 + INSURANCE_STATUS +\n    raceb + CDCC_TOTAL_BEST + SEX + agegroup + stage3 + FACILITY_TYPE_CD + treatnotatdiag,\n    data = synthetic_NCDB_data, family = binomial(link = logit))\n\n# Tidy results\ntidy_log_fit &lt;- data.frame(summary(log_fit)$coefficients)\n\nrmarkdown::paged_table(tidy_log_fit %&gt;%\n    mutate(OR = exp(Estimate)) %&gt;%\n    arrange(Pr...z..))\n\n\n\n\n  \n\n\n\nCode\n# ?paged_table\n\n\n\n\nGraphing proportion receiving upfront surg at different facility types over time\n\n\nCode\n# Making df of just people who got upfront surg\nsynthetic_NCDB_data &lt;- synthetic_NCDB_data %&gt;%\n    mutate(neoadjuvant = as.numeric(neoadjuvant) - 1)\ndf2 &lt;- synthetic_NCDB_data %&gt;%\n    filter(neoadjuvant == 1)\n\n# renaming the fac type\ndfyear &lt;- synthetic_NCDB_data %&gt;%\n    dplyr::select(YEAR_OF_DIAGNOSIS, neoadjuvant, FACILITY_TYPE_CD)\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 1] &lt;- \"Community Cancer Program\"\n\n\nWarning: Unknown or uninitialised column: `Facility_Type`.\n\n\nCode\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 2] &lt;- \"Comprehensive CC Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 3] &lt;- \"Academic Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 4] &lt;- \"Integrated Network Cancer Program\"\n\n\n# finding proportion of upfront surg by fac type\ndfyear &lt;- dfyear %&gt;%\n    dplyr::group_by(YEAR_OF_DIAGNOSIS, Facility_Type) %&gt;%\n    dplyr::summarize(ratio = mean(neoadjuvant))\n\n\n`summarise()` has grouped output by 'YEAR_OF_DIAGNOSIS'. You can override using\nthe `.groups` argument.\n\n\nCode\n# finding overall median per year of upfront surg\ndfyearavg &lt;- synthetic_NCDB_data %&gt;%\n    dplyr::group_by(YEAR_OF_DIAGNOSIS) %&gt;%\n    dplyr::summarize(ratio = mean(neoadjuvant))\ndfyearavg$Facility_Type &lt;- \"Overall Median\"\ndfyearavg &lt;- dfyearavg %&gt;%\n    select(YEAR_OF_DIAGNOSIS, Facility_Type, ratio)\n\n# Merging overall and by facility type\nyear1 &lt;- as.data.frame(dfyear)\nyear2 &lt;- as.data.frame(dfyearavg)\nmergedyearly &lt;- rbind(year1, year2)\nmergedyearly$Facility_Type &lt;- factor(mergedyearly$Facility_Type, levels = c(\"Integrated Network Cancer Program\",\n    \"Academic Program\", \"Overall Median\", \"Comprehensive CC Program\", \"Community Cancer Program\"))\n\n# plotting upfron surg by fac type\nggplot(mergedyearly) + geom_line(data = mergedyearly, aes(x = YEAR_OF_DIAGNOSIS,\n    y = ratio, group = Facility_Type, color = Facility_Type), size = 1.3) + labs(x = \"Year of Diagnosis\",\n    y = \"Proportion Receiving Upfront Surgery\", color = \"Facility Type\") + theme_test() +\n    scale_color_brewer(palette = \"Dark2\")\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\nLooking at how delays in surgery and facility switching are linked\n\n\nCode\n# making three groups for a surgery delay\ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS == 0] &lt;- \"Day zero\"\ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS &gt; 0 & df2$DX_DEFSURG_STARTED_DAYS &lt; 28] &lt;- \"Short delay\"\ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS &gt;= 28] &lt;- \"Long Delay\"\ndf2$surggroup &lt;- factor(df2$surggroup)\n\n# plotting surg delay and switching facility\nggplot(df2, aes(x = DX_DEFSURG_STARTED_DAYS, fill = treatnotatdiag)) + geom_histogram(binwidth = 5) +\n    xlim(-10, 200) + labs(x = \"Days Untill Surgery From Diagnosis\", y = \"Count\",\n    fill = \"Facility Switch\") + theme_test() + scale_fill_brewer(palette = \"Set2\") +\n    geom_vline(xintercept = 28)"
  }
]