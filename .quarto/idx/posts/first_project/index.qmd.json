{"title":"Adoption of a new Colorectal Cancer Treatment","markdown":{"yaml":{"title":"Adoption of a new Colorectal Cancer Treatment","author":"Dave Hein","date":"2023-05-11","categories":["R","python","regression","synthetic data","oncology","data cleaning"],"image":"headshot.jpeg","format":{"html":{"toc":true,"code-fold":"show","code-tools":true}}},"headingText":"Creating Synthetic Data","containsRefs":false,"markdown":"\n<style type=\"text/css\">\n\ncode.r{\n  font-size: 14px;\n}\ntd {\n  font-size: 12px;\n}\n\n</style>\n\n\n```{r, warning=FALSE, message=FALSE}\nknitr::opts_chunk$set(echo = TRUE, fig.width=12, fig.height=8)\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(lmtest)\nlibrary(glmnet)\nlibrary(nnet)\nlibrary(reticulate)\nlibrary(broom)\nlibrary(rmarkdown)\n#py_discover_config()\n#use_condaenv(\"website_env\")\n\n```\n\n\n### Data cleaning and prep with R\n\n```{r, eval=FALSE, tidy=TRUE}\n# We will use synthpop to generate a synthetic data set\nlibrary(synthpop)\n\n# Reading in original data from the NCDB\nRectalData <- read_dta(\"data_sets/ncdb_project_data.dta\")\n\ndf1 <- RectalData %>% select(RX_SUMM_SYSTEMIC_SUR_SEQ,\n                                 RX_SUMM_RADIATION, \n                                 RX_SUMM_SURGRAD_SEQ,\n                                 RX_SUMM_CHEMO,  \n                                 SEX,\n                                 MED_INC_QUAR_12, \n                                 AGE,\n                                 raceb, \n                                 TNM_CLIN_STAGE_GROUP,\n                                 TNM_PATH_STAGE_GROUP,\n                                 SEQUENCE_NUMBER, \n                                 HISTOLOGY, \n                                 RX_SUMM_SURG_PRIM_SITE, \n                                 YEAR_OF_DIAGNOSIS, \n                                 FACILITY_TYPE_CD, \n                                 INSURANCE_STATUS, \n                                 CDCC_TOTAL_BEST, \n                                 DX_DEFSURG_STARTED_DAYS,\n                                 CLASS_OF_CASE\n)\n\ndf1 <- df1 %>% \n  filter(!RX_SUMM_SYSTEMIC_SUR_SEQ %in% c(6,7,9), # unknown sequence  \n         !RX_SUMM_RADIATION == 9, # unknown if rad recommended, death cert only\n         !RX_SUMM_SURGRAD_SEQ %in% c(6, 9), # unknown sequence\n         !RX_SUMM_CHEMO %in% c(99,88), # unknown chemo\n          SEQUENCE_NUMBER %in% c(\"00\",\"01\"), # Primary cancer\n          HISTOLOGY %in% c(8140, 8210, 8260, 8261, 8262, 8263, 8470, 8480, 8481), # Proper histology codes\n          RX_SUMM_SURG_PRIM_SITE %in% c(30, 40, 50, 60, 70, 80)) # primary surgery\n\n# Make a simple stage variable and filter to only stage 2 and 3\ndf1 <- df1 %>% mutate(TNM_CLIN_STAGE_GROUP, stage3 = ifelse(str_detect(TNM_CLIN_STAGE_GROUP,\"2\"),\"2\",\"0\")) \ndf1$stage3[str_detect(df1$TNM_CLIN_STAGE_GROUP,\"3\") == TRUE] <- \"3\"\ndf1 <- df1[!(df1$stage3 ==\"0\"),]\n\n# Define neoadjuvant, rad or chemo before surgery \ndf1 <- df1 %>% mutate(neoadjuvant = 3)\ndf1 <- df1 %>% mutate(neoadjuvant = case_when(RX_SUMM_SURGRAD_SEQ %in% c(2,4) ~ 1,\n                                              RX_SUMM_SYSTEMIC_SUR_SEQ %in% c(2,4) ~ 1,\n                                              RX_SUMM_RADIATION==0 & RX_SUMM_CHEMO %in% c(0, 82, 85, 86, 87) ~ 0,\n                                              RX_SUMM_SURGRAD_SEQ==3 & RX_SUMM_CHEMO %in% c(0, 82, 85, 86, 87) ~ 0,\n                                              RX_SUMM_SYSTEMIC_SUR_SEQ==3 & df1$RX_SUMM_RADIATION==0 ~ 0,\n                                              RX_SUMM_SURGRAD_SEQ==3 & RX_SUMM_SYSTEMIC_SUR_SEQ==3 ~ 0\n                                              )) %>% filter(neoadjuvant != 3)\n\n# age group under 45, 45-65, 65 and up AGE\ndf1 <- df1 %>% mutate(agegroup= case_when(AGE<=45 ~0, AGE >45 & AGE <65 ~1, AGE >= 65 ~2))\n\n# create a var for switching facility and add the unknown gov insurance to unknown insurance \ndf1 <- df1 %>% mutate(CLASS_OF_CASE, treatnotatdiag = ifelse(CLASS_OF_CASE %in% c(0,20,21,22),\"Switched\",\"Stayed\"),\n                      INSURANCE_STATUS = ifelse(INSURANCE_STATUS==4,9,INSURANCE_STATUS))\n\n# Omit NA, this project used complete case analysis\ndf1 <- na.omit(df1)\n\n# Keep only relevant variables\ndf1 <- df1 %>% select(SEX,\n                      MED_INC_QUAR_12, \n                      agegroup,\n                      raceb, \n                      stage3,\n                      neoadjuvant,\n                      treatnotatdiag,\n                      YEAR_OF_DIAGNOSIS, \n                      FACILITY_TYPE_CD, \n                      INSURANCE_STATUS, \n                      CDCC_TOTAL_BEST, \n                      DX_DEFSURG_STARTED_DAYS\n)\n\n# Make variables into factors \ndf2 <- mutate(across(!DX_DEFSURG_STARTED_DAYS, as.factor))\n```\n\n### Data cleaning and prep with Python\n\n```{r}\n\n\n```\n\n### Generating and inspecting synthetic data\n\n```{r, eval=FALSE, tidy=TRUE}\n# Make synthetic data using CART and bootstrapping\n\n# Reorder for synthetic data generation\ndf3 <- df2 %>% dplyr::relocate(raceb,MED_INC_QUAR_12, neoadjuvant) \n\n# Strat by race and ethnicity and median income for best overlap\nsynth_1 <- syn.strata(df3, proper = TRUE, strata = df2$raceb)\nsynth_2 <- syn.strata(df3, proper = TRUE, strata = df3$MED_INC_QUAR_12)\n\nsynth_dat1 <- synth_1$syn\nsynth_dat2 <- synth_2$syn\n\nvars_i_want <- colnames(df2)\nvars_i_want<-vars_i_want[!vars_i_want == \"DX_DEFSURG_STARTED_DAYS\"]\n\n# Check Heat maps to compare\nsynthpop::utility.tables(synth_dat1, df3,tables=\"twoway\",vars = vars_i_want)\nsynthpop::utility.tables(synth_dat2, df3,tables=\"twoway\",vars = vars_i_want)\n\n# Remove Replicates\nfinal_synth_data <- sdc(synth_2, df3, label=\"synthetic\", rm.replicated.uniques = TRUE)\nf <- final_synth_data$syn\nwrite_tsv(f, \"synthetic_NCDB_data.tsv\")\n```\n\n## Analysis\n\n### Logistic regression for odds of upfront surgery (R)\n\n```{r, tidy=TRUE, message=FALSE}\n# Load synthetic data\nsynthetic_NCDB_data <- read_delim(\"synthetic_NCDB_data.tsv\", delim = \"\\t\", escape_double = FALSE, trim_ws = TRUE)\nsynthetic_NCDB_data <- synthetic_NCDB_data %>% mutate(across(!DX_DEFSURG_STARTED_DAYS, as.factor))\n\n#logistic regression\nlog_fit <- glm(neoadjuvant ~ YEAR_OF_DIAGNOSIS + \n      MED_INC_QUAR_12 + \n      INSURANCE_STATUS + \n      raceb + \n      CDCC_TOTAL_BEST + \n      SEX + \n      agegroup + \n      stage3 + \n      FACILITY_TYPE_CD + \n      treatnotatdiag,  \n    data = synthetic_NCDB_data, family = binomial(link = logit))\n\n# Tidy results\ntidy_log_fit <- data.frame(summary(log_fit)$coefficients)\n\nrmarkdown::paged_table(tidy_log_fit %>% mutate(OR = exp(Estimate)) %>% arrange(`Pr...z..`))\n#?paged_table\n```\n\n### Graphing proportion receiving upfront surg at different facility types over time\n\n```{r, tidy=TRUE}\n# Making df of just people who got upfront surg\nsynthetic_NCDB_data <- synthetic_NCDB_data %>% mutate(neoadjuvant = as.numeric(neoadjuvant)-1)\ndf2 <- synthetic_NCDB_data %>% filter(neoadjuvant == 1)\n\n# renaming the fac type \ndfyear <- synthetic_NCDB_data %>% dplyr::select(YEAR_OF_DIAGNOSIS, neoadjuvant, FACILITY_TYPE_CD)\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 1] <- \"Community Cancer Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 2] <- \"Comprehensive CC Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 3] <- \"Academic Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 4] <- \"Integrated Network Cancer Program\"\n\n\n# finding proportion of upfront surg by fac type\ndfyear <- dfyear %>% dplyr::group_by(YEAR_OF_DIAGNOSIS, Facility_Type) %>% dplyr::summarize(ratio=mean(neoadjuvant))\n\n# finding overall median per year of upfront surg\ndfyearavg <- synthetic_NCDB_data %>% dplyr::group_by(YEAR_OF_DIAGNOSIS) %>% dplyr::summarize(ratio = mean(neoadjuvant))\ndfyearavg$Facility_Type <- \"Overall Median\"\ndfyearavg <- dfyearavg %>% select(YEAR_OF_DIAGNOSIS, Facility_Type, ratio)\n\n# Merging overall and by facility type\nyear1 <- as.data.frame(dfyear)\nyear2 <- as.data.frame(dfyearavg)\nmergedyearly <- rbind(year1,year2)\nmergedyearly$Facility_Type <- factor(mergedyearly$Facility_Type, levels = c(\"Integrated Network Cancer Program\",\n                                                                            \"Academic Program\",\n                                                                            \"Overall Median\",\n                                                                            \"Comprehensive CC Program\",\n                                                                            \"Community Cancer Program\"))\n\n#plotting upfron surg by fac type\nggplot(mergedyearly) + \n  geom_line(data = mergedyearly, aes(x=YEAR_OF_DIAGNOSIS, y=ratio, group = Facility_Type, color=Facility_Type), size = 1.3) + \n  labs(x=\"Year of Diagnosis\", y = \"Proportion Receiving Upfront Surgery\", color = \"Facility Type\") + \n  theme_test() + scale_color_brewer(palette = \"Dark2\") \n```\n\n### Looking at how delays in surgery and facility switching are linked\n\n```{r, warning=FALSE, tidy=TRUE}\n#making three groups for a surgery delay \ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS == 0] <- \"Day zero\"\ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS > 0 & df2$DX_DEFSURG_STARTED_DAYS < 28] <- \"Short delay\"\ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS >= 28] <- \"Long Delay\"\ndf2$surggroup <- factor(df2$surggroup)  \n  \n#plotting surg delay and switching facility\nggplot(df2, aes(x=DX_DEFSURG_STARTED_DAYS,fill=treatnotatdiag)) + \n  geom_histogram(binwidth = 5) + \n  xlim(-10,200) + \n  labs(x=\"Days Untill Surgery From Diagnosis\", y = \"Count\", fill = \"Facility Switch\") + \n  theme_test() + scale_fill_brewer(palette = \"Set2\") + \n  geom_vline(xintercept=28) \n```\n","srcMarkdownNoYaml":"\n<style type=\"text/css\">\n\ncode.r{\n  font-size: 14px;\n}\ntd {\n  font-size: 12px;\n}\n\n</style>\n\n\n```{r, warning=FALSE, message=FALSE}\nknitr::opts_chunk$set(echo = TRUE, fig.width=12, fig.height=8)\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(lmtest)\nlibrary(glmnet)\nlibrary(nnet)\nlibrary(reticulate)\nlibrary(broom)\nlibrary(rmarkdown)\n#py_discover_config()\n#use_condaenv(\"website_env\")\n\n```\n\n## Creating Synthetic Data\n\n### Data cleaning and prep with R\n\n```{r, eval=FALSE, tidy=TRUE}\n# We will use synthpop to generate a synthetic data set\nlibrary(synthpop)\n\n# Reading in original data from the NCDB\nRectalData <- read_dta(\"data_sets/ncdb_project_data.dta\")\n\ndf1 <- RectalData %>% select(RX_SUMM_SYSTEMIC_SUR_SEQ,\n                                 RX_SUMM_RADIATION, \n                                 RX_SUMM_SURGRAD_SEQ,\n                                 RX_SUMM_CHEMO,  \n                                 SEX,\n                                 MED_INC_QUAR_12, \n                                 AGE,\n                                 raceb, \n                                 TNM_CLIN_STAGE_GROUP,\n                                 TNM_PATH_STAGE_GROUP,\n                                 SEQUENCE_NUMBER, \n                                 HISTOLOGY, \n                                 RX_SUMM_SURG_PRIM_SITE, \n                                 YEAR_OF_DIAGNOSIS, \n                                 FACILITY_TYPE_CD, \n                                 INSURANCE_STATUS, \n                                 CDCC_TOTAL_BEST, \n                                 DX_DEFSURG_STARTED_DAYS,\n                                 CLASS_OF_CASE\n)\n\ndf1 <- df1 %>% \n  filter(!RX_SUMM_SYSTEMIC_SUR_SEQ %in% c(6,7,9), # unknown sequence  \n         !RX_SUMM_RADIATION == 9, # unknown if rad recommended, death cert only\n         !RX_SUMM_SURGRAD_SEQ %in% c(6, 9), # unknown sequence\n         !RX_SUMM_CHEMO %in% c(99,88), # unknown chemo\n          SEQUENCE_NUMBER %in% c(\"00\",\"01\"), # Primary cancer\n          HISTOLOGY %in% c(8140, 8210, 8260, 8261, 8262, 8263, 8470, 8480, 8481), # Proper histology codes\n          RX_SUMM_SURG_PRIM_SITE %in% c(30, 40, 50, 60, 70, 80)) # primary surgery\n\n# Make a simple stage variable and filter to only stage 2 and 3\ndf1 <- df1 %>% mutate(TNM_CLIN_STAGE_GROUP, stage3 = ifelse(str_detect(TNM_CLIN_STAGE_GROUP,\"2\"),\"2\",\"0\")) \ndf1$stage3[str_detect(df1$TNM_CLIN_STAGE_GROUP,\"3\") == TRUE] <- \"3\"\ndf1 <- df1[!(df1$stage3 ==\"0\"),]\n\n# Define neoadjuvant, rad or chemo before surgery \ndf1 <- df1 %>% mutate(neoadjuvant = 3)\ndf1 <- df1 %>% mutate(neoadjuvant = case_when(RX_SUMM_SURGRAD_SEQ %in% c(2,4) ~ 1,\n                                              RX_SUMM_SYSTEMIC_SUR_SEQ %in% c(2,4) ~ 1,\n                                              RX_SUMM_RADIATION==0 & RX_SUMM_CHEMO %in% c(0, 82, 85, 86, 87) ~ 0,\n                                              RX_SUMM_SURGRAD_SEQ==3 & RX_SUMM_CHEMO %in% c(0, 82, 85, 86, 87) ~ 0,\n                                              RX_SUMM_SYSTEMIC_SUR_SEQ==3 & df1$RX_SUMM_RADIATION==0 ~ 0,\n                                              RX_SUMM_SURGRAD_SEQ==3 & RX_SUMM_SYSTEMIC_SUR_SEQ==3 ~ 0\n                                              )) %>% filter(neoadjuvant != 3)\n\n# age group under 45, 45-65, 65 and up AGE\ndf1 <- df1 %>% mutate(agegroup= case_when(AGE<=45 ~0, AGE >45 & AGE <65 ~1, AGE >= 65 ~2))\n\n# create a var for switching facility and add the unknown gov insurance to unknown insurance \ndf1 <- df1 %>% mutate(CLASS_OF_CASE, treatnotatdiag = ifelse(CLASS_OF_CASE %in% c(0,20,21,22),\"Switched\",\"Stayed\"),\n                      INSURANCE_STATUS = ifelse(INSURANCE_STATUS==4,9,INSURANCE_STATUS))\n\n# Omit NA, this project used complete case analysis\ndf1 <- na.omit(df1)\n\n# Keep only relevant variables\ndf1 <- df1 %>% select(SEX,\n                      MED_INC_QUAR_12, \n                      agegroup,\n                      raceb, \n                      stage3,\n                      neoadjuvant,\n                      treatnotatdiag,\n                      YEAR_OF_DIAGNOSIS, \n                      FACILITY_TYPE_CD, \n                      INSURANCE_STATUS, \n                      CDCC_TOTAL_BEST, \n                      DX_DEFSURG_STARTED_DAYS\n)\n\n# Make variables into factors \ndf2 <- mutate(across(!DX_DEFSURG_STARTED_DAYS, as.factor))\n```\n\n### Data cleaning and prep with Python\n\n```{r}\n\n\n```\n\n### Generating and inspecting synthetic data\n\n```{r, eval=FALSE, tidy=TRUE}\n# Make synthetic data using CART and bootstrapping\n\n# Reorder for synthetic data generation\ndf3 <- df2 %>% dplyr::relocate(raceb,MED_INC_QUAR_12, neoadjuvant) \n\n# Strat by race and ethnicity and median income for best overlap\nsynth_1 <- syn.strata(df3, proper = TRUE, strata = df2$raceb)\nsynth_2 <- syn.strata(df3, proper = TRUE, strata = df3$MED_INC_QUAR_12)\n\nsynth_dat1 <- synth_1$syn\nsynth_dat2 <- synth_2$syn\n\nvars_i_want <- colnames(df2)\nvars_i_want<-vars_i_want[!vars_i_want == \"DX_DEFSURG_STARTED_DAYS\"]\n\n# Check Heat maps to compare\nsynthpop::utility.tables(synth_dat1, df3,tables=\"twoway\",vars = vars_i_want)\nsynthpop::utility.tables(synth_dat2, df3,tables=\"twoway\",vars = vars_i_want)\n\n# Remove Replicates\nfinal_synth_data <- sdc(synth_2, df3, label=\"synthetic\", rm.replicated.uniques = TRUE)\nf <- final_synth_data$syn\nwrite_tsv(f, \"synthetic_NCDB_data.tsv\")\n```\n\n## Analysis\n\n### Logistic regression for odds of upfront surgery (R)\n\n```{r, tidy=TRUE, message=FALSE}\n# Load synthetic data\nsynthetic_NCDB_data <- read_delim(\"synthetic_NCDB_data.tsv\", delim = \"\\t\", escape_double = FALSE, trim_ws = TRUE)\nsynthetic_NCDB_data <- synthetic_NCDB_data %>% mutate(across(!DX_DEFSURG_STARTED_DAYS, as.factor))\n\n#logistic regression\nlog_fit <- glm(neoadjuvant ~ YEAR_OF_DIAGNOSIS + \n      MED_INC_QUAR_12 + \n      INSURANCE_STATUS + \n      raceb + \n      CDCC_TOTAL_BEST + \n      SEX + \n      agegroup + \n      stage3 + \n      FACILITY_TYPE_CD + \n      treatnotatdiag,  \n    data = synthetic_NCDB_data, family = binomial(link = logit))\n\n# Tidy results\ntidy_log_fit <- data.frame(summary(log_fit)$coefficients)\n\nrmarkdown::paged_table(tidy_log_fit %>% mutate(OR = exp(Estimate)) %>% arrange(`Pr...z..`))\n#?paged_table\n```\n\n### Graphing proportion receiving upfront surg at different facility types over time\n\n```{r, tidy=TRUE}\n# Making df of just people who got upfront surg\nsynthetic_NCDB_data <- synthetic_NCDB_data %>% mutate(neoadjuvant = as.numeric(neoadjuvant)-1)\ndf2 <- synthetic_NCDB_data %>% filter(neoadjuvant == 1)\n\n# renaming the fac type \ndfyear <- synthetic_NCDB_data %>% dplyr::select(YEAR_OF_DIAGNOSIS, neoadjuvant, FACILITY_TYPE_CD)\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 1] <- \"Community Cancer Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 2] <- \"Comprehensive CC Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 3] <- \"Academic Program\"\ndfyear$Facility_Type[dfyear$FACILITY_TYPE_CD == 4] <- \"Integrated Network Cancer Program\"\n\n\n# finding proportion of upfront surg by fac type\ndfyear <- dfyear %>% dplyr::group_by(YEAR_OF_DIAGNOSIS, Facility_Type) %>% dplyr::summarize(ratio=mean(neoadjuvant))\n\n# finding overall median per year of upfront surg\ndfyearavg <- synthetic_NCDB_data %>% dplyr::group_by(YEAR_OF_DIAGNOSIS) %>% dplyr::summarize(ratio = mean(neoadjuvant))\ndfyearavg$Facility_Type <- \"Overall Median\"\ndfyearavg <- dfyearavg %>% select(YEAR_OF_DIAGNOSIS, Facility_Type, ratio)\n\n# Merging overall and by facility type\nyear1 <- as.data.frame(dfyear)\nyear2 <- as.data.frame(dfyearavg)\nmergedyearly <- rbind(year1,year2)\nmergedyearly$Facility_Type <- factor(mergedyearly$Facility_Type, levels = c(\"Integrated Network Cancer Program\",\n                                                                            \"Academic Program\",\n                                                                            \"Overall Median\",\n                                                                            \"Comprehensive CC Program\",\n                                                                            \"Community Cancer Program\"))\n\n#plotting upfron surg by fac type\nggplot(mergedyearly) + \n  geom_line(data = mergedyearly, aes(x=YEAR_OF_DIAGNOSIS, y=ratio, group = Facility_Type, color=Facility_Type), size = 1.3) + \n  labs(x=\"Year of Diagnosis\", y = \"Proportion Receiving Upfront Surgery\", color = \"Facility Type\") + \n  theme_test() + scale_color_brewer(palette = \"Dark2\") \n```\n\n### Looking at how delays in surgery and facility switching are linked\n\n```{r, warning=FALSE, tidy=TRUE}\n#making three groups for a surgery delay \ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS == 0] <- \"Day zero\"\ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS > 0 & df2$DX_DEFSURG_STARTED_DAYS < 28] <- \"Short delay\"\ndf2$surggroup[df2$DX_DEFSURG_STARTED_DAYS >= 28] <- \"Long Delay\"\ndf2$surggroup <- factor(df2$surggroup)  \n  \n#plotting surg delay and switching facility\nggplot(df2, aes(x=DX_DEFSURG_STARTED_DAYS,fill=treatnotatdiag)) + \n  geom_histogram(binwidth = 5) + \n  xlim(-10,200) + \n  labs(x=\"Days Untill Surgery From Diagnosis\", y = \"Count\", fill = \"Facility Switch\") + \n  theme_test() + scale_fill_brewer(palette = \"Set2\") + \n  geom_vline(xintercept=28) \n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"show","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"highlight-style":"kate","toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.324","editor":"visual","theme":"minty","fontsize":"1.4em","grid":{"sidebar-width":"340px","body-width":"1400px","margin-width":"450px","gutter-width":"1.5rem"},"code-block-border-left":"#78c2ad","code-block-bg":true,"title-block-banner":true,"title":"Adoption of a new Colorectal Cancer Treatment","author":"Dave Hein","date":"2023-05-11","categories":["R","python","regression","synthetic data","oncology","data cleaning"],"image":"headshot.jpeg"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}